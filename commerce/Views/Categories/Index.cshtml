@model IEnumerable<commerce.ViewModels.CategoryViewModel>

@{
    bool IsEmpty(string name) => name == "Empty";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ParentCatName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpdatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreationTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpdatedTime)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @if (IsEmpty(item.ParentCatName))
                {
                    <p class="text-warning">  @Html.DisplayFor(modelItem => item.ParentCatName)</p>
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.ParentCatName)

                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreationTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedTime)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.CategoryId }) |
                @Html.ActionLink("Details", "Details", new { id = item.CategoryId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.CategoryId })
            </td>
        </tr>
    }

</table>
