@model commerce.ViewModels.CreateCategoriesViewModel

@{
    var parentCategoryName = ViewBag.catParentName as string ?? "there is no parent category";
}

<h2>Edit Category: @Model.Name</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CategoryId)
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.CreationTime)
        <div class="row">

            <div class="col-12 mb-4">
                <div class="d-inline">
                    Current parent category is:
                    <p class="text-secondary d-inline">@parentCategoryName</p>
                </div>
            </div>

            <div class="col-lg-6 col-sm-12">
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.Name,
                            new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-lg-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.ParentCatId,
                        htmlAttributes: new { @class = " col-md-2 text-nowrap" })
                    <div>
                        @Html.DropDownListFor(model => model.ParentCatId,
                            new SelectList(Model.Categories, "CategoryId", "Name"),
                            "Select new parent category", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ParentCatId, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-12 mr-4 ml-4 mt-3 ">
                <input type="submit" value="Save" class="btn btn-primary mr-3" />
                @Html.ActionLink("Back to List", "Index", null,
                    htmlAttributes: new { @class = "btn btn-success" })
            </div>

        </div>

    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
