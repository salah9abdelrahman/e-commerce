@model commerce.Core.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit product : @Model.Name</h2>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group text-nowrap">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, rows: 5, columns: 5,
                             htmlAttributes: new { @class = "form-control md-textarea" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RegularPrice, htmlAttributes: new { @class = "text-nowrap col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RegularPrice,
                            new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RegularPrice, "",
                            new { @class = "text-danger" })
                    </div>
                </div>


            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductStatusId,
                        @Html.DisplayNameFor(x => x.ProductStatus.Name).ToString(), htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProductStatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductStatusId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId,
                        @Html.DisplayNameFor(x => x.Category.Name).ToString(),
                        htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", null,
                            htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductStatusId,
                            "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DiscountPrice,
                        htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DiscountPrice,
                            new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DiscountPrice,
                            "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="d-inline col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
                <div class=" d-inline">
                    @Html.ActionLink("Back to List", "Index", null,
                        htmlAttributes: new { @class = "btn btn-success" })
                </div>
            </div>
        </div>


    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
