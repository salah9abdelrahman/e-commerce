@model commerce.ViewModels.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Use another service to log in.</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <div class="card" style="width: 18rem;">
                    <div class="list-group list-group-flush">
                        @foreach (AuthenticationDescription p in loginProviders)
                        {
                            <button type="submit" class="btn btn-outline-info bg-white hover-bg-black" id="@p.AuthenticationType"
                                    name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
                                <div>


                                    @if (p.AuthenticationType == "Facebook")
                                    {
                                        <i class="fa fa-facebook-official d-inline "></i>
                                    }
                                    else if (p.AuthenticationType == "Google")
                                    {
                                        <i class="fa fa-google d-inline "></i>
                                    }
                                    <p class="text-dark d-inline">sign in with @p.AuthenticationType</p>
                                </div>
                            </button>



                        }
                    </div>
                </div>

            </div>
        }
    }
}
