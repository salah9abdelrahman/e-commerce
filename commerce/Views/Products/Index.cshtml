@using System.Diagnostics.Eventing.Reader
@model IEnumerable<commerce.Core.Models.Product>
@{


}

<div class="col-lg-12 text-center">
    <h2>Products</h2>

</div>
<div class="col-lg-12">
    <p>
        @Html.ActionLink("Create new product", "Create", null,
            htmlAttributes: new { @class = "btn btn-outline-primary" })
    </p>
</div>

<table class="table text-center " id="products_table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductStatus.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegularPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DiscountPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreationTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedTime)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductStatus.Name)
                </td>

                <td>
                    @if (Html.DisplayFor(modelItem => item.Description).ToString().Length > 20)
                    {
                        <p>
                            @ViewFunctions.PipeMaxLength(Html.DisplayFor(modelItem => item.Description).ToString(),
                            20)
                        </p>
                    }
                    else
                    {
                        <p>
                            @ViewFunctions.NoInfo(Html.DisplayFor(modelItem => item.Description).ToString())
                        </p>
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegularPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiscountPrice)
                </td>
                <td>
                    @if (item.Quantity < 3)
                    {

                        <p class="bg-danger"> @Html.DisplayFor(modelItem => item.Quantity) </p>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Quantity)

                    }
                </td>
                <td class="text-break ">
                    @ViewFunctions.UserEmail(Html.DisplayFor(modelItem => item.CreatedBy))
                </td>
                <td class="text-break ">
                    @ViewFunctions.UserEmail(Html.DisplayFor(modelItem => item.UpdatedBy))

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedTime)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductId },
                        htmlAttributes: new { @class = "btn btn-outline-success btn-sm text-black-50" })
                    @Html.ActionLink("Details", "Details", new { id = item.ProductId },
                        htmlAttributes: new { @class = "btn btn-outline-primary btn-sm text-black-50" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductId },
                        htmlAttributes: new { @class = "btn btn-outline-danger btn-sm text-black-50" })
                </td>
            </tr>
        }
    </tbody>

</table>

@*@section scripts {


        <script type="text/javascript">

            $(document).ready(function () {
                $('#products_table').DataTable();
            });

        </script>

    }*@
